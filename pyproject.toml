[tool.poetry]
name = "meshtastic"
version = "2.3.14"
description = "Python API & client shell for talking to Meshtastic devices"
authors = ["Meshtastic Developers <contact@meshtastic.org>"]
license = "GPL-3.0-only"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.9,<3.13"                                             # 3.9 is needed for pandas, bleak requires a max of 3.13 for some reason
pyserial = "^3.5"
protobuf = ">=5.26.0"
dotmap = "^1.3.30"
pexpect = "^4.9.0"
pyqrcode = "^1.2.1"
tabulate = "^0.9.0"
webencodings = "^0.5.1"
requests = "^2.31.0"
pyparsing = "^3.1.2"
pyyaml = "^6.0.1"
pypubsub = "^4.0.3"
bleak = "^0.21.1"
packaging = "^24.0"
riden = { git = "https://github.com/geeksville/riden.git#1.2.1" }
parse = "^1.20.2"
ppk2-api = "^0.9.2"
pyarrow = "^16.1.0"
platformdirs = "^4.2.2"
print-color = "^0.4.6"

[tool.poetry.group.dev.dependencies]
hypothesis = "^6.103.2"
pytest = "^8.2.2"
pytest-cov = "^5.0.0"
pdoc3 = "^0.10.0"
autopep8 = "^2.1.0"
pylint = "^3.2.3"
pytap2 = "^2.3.0"
pyinstaller = "^6.8.0"
mypy = "^1.10.0"
mypy-protobuf = "^3.6.0"
types-protobuf = "^5.26.0.20240422"
types-tabulate = "^0.9.0.20240106"
types-requests = "^2.31.0.20240406"
types-setuptools = "^69.5.0.20240423"
types-pyyaml = "^6.0.12.20240311"
pyarrow-stubs = "^10.0.1.7"

# If you are doing power analysis you probably want these extra devtools
[tool.poetry.group.analysis]
optional = true

[tool.poetry.group.analysis.dependencies]
jupyterlab = "^4.2.2"
mypy = "^1.10.0"
mypy-protobuf = "^3.6.0"
types-protobuf = "^5.26.0.20240422"
types-tabulate = "^0.9.0.20240106"
types-requests = "^2.31.0.20240406"
types-setuptools = "^69.5.0.20240423"
types-pyyaml = "^6.0.12.20240311"
matplotlib = "^3.9.0"
ipympl = "^0.9.4"
ipywidgets = "^8.1.3"
jupyterlab-widgets = "^3.0.11"
dash = "^2.17.1"

[tool.poetry.extras]
tunnel = ["pytap2"]

[tool.poetry.scripts]
meshtastic = "meshtastic.__main__:main"
mesh-tunnel = "meshtastic.__main__:tunnelMain [tunnel]"

# "Poe the poet" (optional) provides an easy way of running non python tools inside the poetry virtualenv
# if you would like to use it run "pipx install poe"
# then you can do stuff like "poe code" to run vscode inside this environment
[tool.poe.tasks]
code = "code ."
juypter = "poetry run jupyter lab"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
